image:
  repository: "nginx"
  tag: "1.25.4"
  pullPolicy: Always

replicas: 2

deploymentStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

podAntiAffinity:
  enabled: true

nodeAffinity:
  enabled: false

service:
  type: LoadBalancer
  port: 80

horizontalPodAutoscaling:
  enabled: true
  maxReplicas: 4 # [Required to be greater than .Values.replicas when enabled]
  targetCPUUtilizationPercentage: 5 # [Optional] Triggers the horizontal pod autoscaling based on the percentage of pods CPU Requests utilized.
  behavior: {} # Optional to customize the scale up and scale down behavior,  https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#configurable-scaling-behavior
    # scaleDown:
    #   stabilizationWindowSeconds: 300
    #   policies:
    #   - type: Pods
    #     value: 1
    #     periodSeconds: 180
    # scaleUp:
    #   stabilizationWindowSeconds: 300
    #   policies:
    #   - type: Pods
    #     value: 2
    #     periodSeconds: 60

podDisruptionBudget:
  enabled: true
  # You can specify only one of maxUnavailable and minAvailable in a single PodDisruptionBudget. 
  # maxUnavailable can only be used to control the eviction of pods that have an associated controller managing them.
  minAvailable: 2 # Number of pods from that set that must still be available after the eviction, even in the absence of the evicted pod. minAvailable can be either an absolute number or a percentage.
  maxUnavailable: 1 # Number of pods from that set that can be unavailable after the eviction. It can be either an absolute number or a percentage.
